# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "thunderbolt" "usbhid" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ "vfat" "nls_cp437" "nls_iso8859-1" "usbhid" ];

  boot.initrd.luks = {
    yubikeySupport = true;
    devices."encrypted-home" = {

      device = "/dev/disk/by-uuid/db76e4f2-0791-4e5e-a95f-54c508cd46dd";

      yubikey = {
        slot = 2;
        twoFactor = false;
        gracePeriod = 300;
        keyLength = 64;
        saltLength = 16;

        storage = {
          device = "/dev/disk/by-uuid/8E0F-3269";
          fsType = "vfat";
          path = "/crypt-storage/default";
        };
      };
    };
  };

  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/9844e058-4ffd-42c3-8309-9fb698630529";
      fsType = "btrfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/8E0F-3269";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/db545989-1345-4ffd-b537-7eb32b09a282";                   
      fsType = "ext4";
    };

  fileSystems."/blockchain" =
    { device = "/dev/disk/by-label/blockchain";
      fsType = "btrfs";
    };

  fileSystems."/var/lib/cardano-node" =
    { device = "/blockchain/cardano";
      options = [ "bind" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/9b7c2229-9f84-46d0-86b5-47b6b462a4dc"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
